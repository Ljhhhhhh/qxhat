<?php

namespace app\admin\controller;
use think\Model;
use think\Request;

class Product extends Common
{
    protected $db;

    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->db = new \app\admin\model\Product();
    }

    public function index()
    {
        $product_list = $this->db->index();
        $count = $this->db->getCount();
        return $this->fetch('', [
            'product_list' => $product_list,
            'count' => $count
        ]);
    }

    public function add()
    {
        $brand = Model('productBrand')->select();
        $style = Model('productStyle')->select();
        return $this->fetch('', [
            'brand' => $brand,
            'style' => $style
        ]);
    }

    public function doAdd(Request $request)
    {
        if($request->isPost()){
            $images_src=[];
            $images=$request->file('images');
            foreach($images as $image){
                // 移动到框架应用根目录/public/uploads/ 目录下
                $image_info = $image->move(ROOT_PATH . 'public' . DS . 'uploads');
                if($image_info){
                    // 成功上传后 获取上传信息
                    $image_src=['src'=>$image_info->getSaveName()];
                    $images_src[]=$image_src;
                }
            }
            $res_img_id=Model('ProductImage')->add($images_src);
            $picture=$request->file('picture');
            if($picture){
                $info = $picture->validate(['size'=>204800,'ext'=>'jpg,png,gif'])->move(ROOT_PATH . 'public/uploads');
                if($info){
                    $savename=$info->getSaveName();
                }else{
                    // 上传失败获取错误信息
                    $this->error($picture->getError());
                }
            }else{
                $this->error('请上传产品封面图');
            }
            $data=input('post.');
            $data['picture']=$savename;
            $validate = validate('Product');
            if (!$validate->check($data)) {
                $this->error($validate->getError());
            }
            $res=$this->db->doAdd($data);
            if($res){
                Model('ProductImage')->setImage($res_img_id,$res);
                $this->success('添加产品成功','product/index');
            }else{
                $this->error('添加失败，请重新添加');
            }
        }else{
            return redirect('index.html');
        }
    }
    public function edit(Request $request){
        $id=intval(input('get.id'));
        $product_info=$this->db->find($id);
        $brand = Model('productBrand')->select();
        $style = Model('productStyle')->select();
        $images=Model('productImage')->where(['product_id'=>$id])->select();
        return $this->fetch('',[
           'product'=>$product_info,
            'style'=>$style,
            'brand'=>$brand,
            'images'=>$images
        ]);
    }
    public function doEdit(Request $request){
        $data=input('post.');
        if($request->isPost()){
            $picture=$request->file('picture');
            if($picture){
                $info = $picture->validate(['size'=>204800,'ext'=>'jpg,png,gif'])->move(ROOT_PATH . 'public/uploads');
                if($info){
                    $savename=$info->getSaveName();
                    $data['picture']=$savename;
                }else{
                    // 上传失败获取错误信息
                    $this->error($picture->getError());
                }
            }
            $images_src=[];
            $images=$request->file('images');
            foreach($images as $image){
                // 移动到框架应用根目录/public/uploads/ 目录下
                $image_info = $image->move(ROOT_PATH . 'public' . DS . 'uploads');
                if($image_info){
                    // 成功上传后 获取上传信息
                    $image_src=['src'=>$image_info->getSaveName()];
                    $images_src[]=$image_src;
                }
            }
            $res_img_id=Model('ProductImage')->add($images_src);
            Model('ProductImage')->setImage($res_img_id,$data['id']);
            $res=$this->db->update($data);
            if($res){
                $this->success('更新成功','product/index');
            }else{
                $this->error('更新失败，请重新更新');
            }
        }
    }
    public function status(Request $request){
        if($request->isPost()){
            $id=intval(input('get.id'));
            $status=input('post.status');
            switch ($status){
                case 0:
                    $this->db->updateStatus($id,1);
                        return [
                            'status'=>1,
                            'str'=>productStatus(1)
                        ];
                case 1:
                    $this->db->updateStatus($id,2);
                    return [
                        'status'=>2,
                        'str'=>productStatus(2)
                    ];
                case 2:
                    $this->db->updateStatus($id,0);
                    return [
                        'status'=>0,
                        'str'=>productStatus(0)
                    ];
            }
        }

    }
}